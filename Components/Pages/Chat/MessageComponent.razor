@page "/chat/{chatId:int}"

@attribute [Authorize]

<h3>Chat</h3>

@if (isLoading && !chatMessages.Any())
{
    <p id="loading">Loading...</p>
}
else
{
    if (chatMessages.Any())
    {
        <!----Loop messages from Database---->
        <ul>
            @foreach (var message in chatMessages)
            {
                if (message.Text != null)
                {
                    <li>@message.UserName: @message.Text @message.Timestamp.ToLocalTime()</li>
                }
                if (message.MediaUrl!=null)
                {
                    var extension = chatService.GetFileExtension(message.MediaUrl);
                    var fileName = chatService.GetFileName(message.MediaUrl);
                    switch (extension)
                    {
                        case ".jpg":
                        case ".jpeg":
                        case ".png":
                            if (message.Text == null)
                            {
                                <li>@message.UserName: @message.Timestamp.ToLocalTime()</li>
                            }
                            <img src="@message.MediaUrl" width="100px" height="100px" />
                            break;
                        case ".mp4":
                            break;
                        case ".mp3":
                        case ".wav":
                            break;
                        case ".pdf":
                        case ".docx":
                        case ".xlsx":
                        case ".zip":
                            <a href="@message.MediaUrl" target="_blank">@fileName</a>
                            break;
                        default:
                            break;
                    }
                }
            }
        </ul>
    }
    else
    {
        <p>No messages to show!</p>
    }

    <!----Loop messages from real time server---->
    <ul>
        @foreach (var message in chatHubService.Messages)
        {
            if (message.Text != null)
            {
                <li>@message.UserName: @message.Text @message.Timestamp.ToLocalTime()</li>
            }
            if (message.MediaUrl != null)
            {
                var extension = chatService.GetFileExtension(message.MediaUrl);
                var fileName = chatService.GetFileName(message.MediaUrl);
                switch (extension)
                {
                    case ".jpg":
                    case ".jpeg":
                    case ".png":
                        if (message.Text == null)
                        {
                            <li>@message.UserName: @message.Timestamp.ToLocalTime()</li>
                        }
                        <img src="@message.MediaUrl" width="100px" height="100px" />
                        break;
                    case ".mp4":
                        break;
                    case ".mp3":
                    case ".wav":
                        break;
                    case ".pdf":
                    case ".docx":
                    case ".xlsx":
                    case ".zip":
                        <a href="@message.MediaUrl" target="_blank">@fileName</a>
                        break;
                    default:
                        break;
                }
            }
        }
    </ul>

    @if (isLoading)
    {
        <p>Loading more messages...</p>
    }

    <button @onclick="() => LoadMoreMessages()" disabled="@isLoading">Load Older Messages</button>
    <br />
}
<div>
    <textarea @bind="newMessage.Text"></textarea>
    <div class="file-field input-field">
        <div class="btn">
            <span>File</span>
                <InputFile OnChange="HandleSelected" type="file"></InputFile>
        </div>
    </div>
    <button @onclick="SendMessageToGroup">
        Send
    </button>
</div>
