<div class="chat-logo">Logo</div>
<div class="bars" @onclick="ToggleNavBar">
    <div class="line"></div>
    <div class="line"></div>
    <div class="line"></div>
    <div class="line"></div>
</div>

<nav class="navbar-layout">
    <ul>
        <AuthorizeView>
            <Authorized>
                <li>
                    <NavLink href="profile" @onclick="()=> CloseNav()">Profile</NavLink>
                </li>
                <li>
                    <NavLink href="#" @onclick="()=> CloseNav()">Chats</NavLink>
                </li>
                <li>
                    <NavLink href="groupcomponent" @onclick="()=> CloseNav()">Groups</NavLink>
                </li>
                <li>
                    <NavLink href="" @onclick="Logout">Logout</NavLink>
                </li>
            </Authorized>
            <NotAuthorized>
                <li>
                    <NavLink href="/" @onclick="()=> CloseNav()">Home</NavLink>
                </li>
                <li>
                    <NavLink href="login" @onclick="()=> CloseNav()">Login</NavLink>
                </li>
                <li>
                    <NavLink href="register" @onclick="()=> CloseNav()">Register</NavLink>
                </li>
            </NotAuthorized>
        </AuthorizeView>
    </ul>
</nav>
@code {
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
        await customAuthStateProvider.SetLogoutState();
        NavigationManager.NavigateTo("login", forceLoad: true);
    }

    private async Task ToggleNavBar()
    {
        await js.InvokeVoidAsync("navBarInterop.toggleNavbar");
    }

    private async Task CloseNav()
    {
        await js.InvokeVoidAsync("navBarInterop.closeNavbar");
    }
}
